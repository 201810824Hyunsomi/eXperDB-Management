<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="scheduleHistorySql">

	<select id="selectScheduleHistory" resultType="hashmap" parameterType="hashmap" >
		/**
		* Query ID : selectScheduleHistory
		* Description : 스케줄이력 조회
		* Author : 변승우
		**/
		SELECT
		  (ROW_NUMBER() OVER()) AS ROWNUM
		, (ROW_NUMBER() OVER()) AS IDX
		, A.SCD_ID
		, A.EXE_GRP_SN
		, A.SCD_NM
		, A.EXE_SN
		, A.EXE_RSLT_CD
		, A.DB_SVR_NM
		, TO_CHAR(A.WRK_STRT_DTM,'YYYY-MM-DD HH24:MI:SS') AS WRK_STRT_DTM
		, TO_CHAR(A.WRK_END_DTM,'YYYY-MM-DD HH24:MI:SS') AS WRK_END_DTM
		, A.WRK_DTM
		FROM(
			SELECT 
	        SCD_ID
	        , EXE_GRP_SN 
			, SCD_NM
			, MIN(A.EXE_SN) AS EXE_SN
			, MAX(A.EXE_RSLT_CD) AS EXE_RSLT_CD
			, (SELECT S.DB_SVR_NM FROM T_DBSVR_I S,T_DB_I D WHERE S.DB_SVR_ID=D.DB_SVR_ID AND D.DB_ID=A.DB_ID)AS DB_SVR_NM
			, MIN(A.WRK_STRT_DTM) AS WRK_STRT_DTM
			, MAX(A.WRK_END_DTM) AS WRK_END_DTM
			, TO_CHAR(TO_CHAR(MAX(A.WRK_END_DTM),'YYYY-MM-DD HH24:MI:SS')::TIMESTAMP - TO_CHAR(MIN(A.WRK_STRT_DTM),'YYYY-MM-DD HH24:MI:SS')::TIMESTAMP, 'HH24시MI분SS초') AS WRK_DTM
			FROM T_WRKEXE_G A
			WHERE 1= 1
			<if test="lgi_dtm_start != null and lgi_dtm_start != '' ">
			 AND to_char(A.WRK_END_DTM,'YYYY-MM-DD') between #{lgi_dtm_start} and #{lgi_dtm_end}
			</if>
			<if test="scd_nm != null and scd_nm != '' ">
			AND A.SCD_NM LIKE #{scd_nm}
			</if>		
			AND A.EXE_RSLT_CD LIKE #{exe_result}
			GROUP BY EXE_GRP_SN, SCD_NM, DB_ID,SCD_ID
			ORDER BY WRK_END_DTM DESC
			LIMIT #{recordCountPerPage} OFFSET #{firstIndex}
		)A
	</select>



	<select id="selectScheduleHistoryTotCnt" parameterType="hashmap" resultType="int">
    	/**
	 	* Query ID : selectScheduleHistoryTotCnt
	 	* Description : 스케줄이력 총 갯수 조회
	 	* Author : 변승우
	 	**/
	 	SELECT
			COUNT(*) totcnt
		FROM(
			SELECT 
	          EXE_GRP_SN 
			, SCD_NM
			, MIN(A.EXE_SN) AS EXE_SN
			, MAX(A.EXE_RSLT_CD) AS EXE_RSLT_CD
			, (SELECT S.DB_SVR_NM FROM T_DBSVR_I S,T_DB_I D WHERE S.DB_SVR_ID=D.DB_SVR_ID AND D.DB_ID=A.DB_ID)AS DB_SVR_NM
			, MIN(A.WRK_STRT_DTM) AS WRK_STRT_DTM
			, MAX(A.WRK_END_DTM) AS WRK_END_DTM
			, TO_CHAR(TO_CHAR(MAX(A.WRK_END_DTM),'YYYY-MM-DD HH24:MI:SS')::TIMESTAMP - TO_CHAR(MIN(A.WRK_STRT_DTM),'YYYY-MM-DD HH24:MI:SS')::TIMESTAMP, 'HH24시MI분SS초') AS WRK_DTM
			FROM T_WRKEXE_G A
			WHERE 1= 1
			<if test="lgi_dtm_start != null and lgi_dtm_start != '' ">
			 AND to_char(A.WRK_END_DTM,'YYYY-MM-DD') between #{lgi_dtm_start} and #{lgi_dtm_end}
			</if>
			<if test="scd_nm != null and scd_nm != '' ">
			AND A.SCD_NM LIKE #{scd_nm}
			</if>		
			AND A.EXE_RSLT_CD LIKE #{exe_result}
			GROUP BY EXE_GRP_SN, SCD_NM, DB_ID
		)A
	</select>
	
	
	
	<select id="selectScheduleHistoryFail" resultType="hashmap" >
		/**
		* Query ID : selectScheduleHistoryFail
		* Description : 스케줄 실패 이력 조회
		* Author : 변승우
		**/
		SELECT 
	        (ROW_NUMBER() OVER()) AS ROWNUM
	        , (ROW_NUMBER() OVER()) AS IDX
	        , A.DB_SVR_NM
	        , A.EXE_SN
	        , A.SCD_ID
	        , A.SCD_NM
	        , A.SCD_ID
	        , A.SCD_NM
	        , A.WRK_ID
	        , A.WRK_NM
	        , A.WRK_STRT_DTM
	        , A.WRK_END_DTM
	        , A.EXE_RESULT
		FROM
		(SELECT
		         D.DB_SVR_NM
		        , A.EXE_SN
		        , A.SCD_ID
		        , C.SCD_NM
		        , A.WRK_ID
		        , B.WRK_NM
				, TO_CHAR(A.WRK_STRT_DTM,'YYYY-MM-DD HH24:MI:SS') AS WRK_STRT_DTM
				, TO_CHAR(A.WRK_END_DTM,'YYYY-MM-DD HH24:MI:SS') AS WRK_END_DTM
		        , (SELECT SYS_CD_NM FROM T_SYSDTL_C WHERE A.EXE_RSLT_CD = SYS_CD ) AS EXE_RESULT
		FROM T_WRKEXE_G A, T_BCK_WRKCNG_I B, T_SCD_M C, T_DBSVR_I D
		WHERE 1= 1
		AND A.WRK_ID = B.WRK_ID
		AND C.SCD_ID = A.SCD_ID
		AND B.DB_SVR_ID = D.DB_SVR_ID
        )A
        WHERE A.EXE_RESULT = 'Fail'
	</select>
	
	
	<select id="selectScheduleNmList" resultType="hashmap" >
		/**
		* Query ID : selectScheduleNmList
		* Description : 스케줄명 조회
		* Author : 변승우
		**/	
		SELECT 
				A.SCD_NM
		FROM T_SCD_M A, T_WRKEXE_G B
		WHERE A.SCD_ID = B.SCD_ID
		AND to_char(B.WRK_END_DTM,'YYYY-MM-DD') between #{wrk_start_dtm} and #{wrk_end_dtm}
		GROUP BY A.SCD_NM	
	</select>
	
	<select id="selectWrkNmList" resultType="hashmap" >
		SELECT 
				C.WRK_NM
		FROM T_SCD_M A, T_WRKEXE_G B, T_BCK_WRKCNG_I C
		WHERE A.SCD_ID = B.SCD_ID
        AND B.WRK_ID = C.WRK_ID
		AND A.SCD_NM = #{scd_nm}
		GROUP BY C.WRK_NM
	</select>
	
	<select id="selectScheduleHistoryDetail" resultType="hashmap" parameterType="int" >
		SELECT 
			  A.SCD_NM
			, A.EXE_SN
			, A.SCD_ID
			, TO_CHAR(A.WRK_STRT_DTM,'YYYY-MM-DD HH24:MI:SS') AS WRK_STRT_DTM
			, TO_CHAR(A.WRK_END_DTM,'YYYY-MM-DD HH24:MI:SS') AS WRK_END_DTM
			, A.WRK_DTM
			,(SELECT SCD_EXP FROM T_SCD_M M WHERE A.SCD_NM = M.SCD_NM)AS SCD_EXP
			FROM(
				SELECT 
				 	  SCD_NM
				 	, SCD_ID
					, MIN(A.EXE_SN) AS EXE_SN
					, MIN(A.WRK_STRT_DTM) AS WRK_STRT_DTM
					, MAX(A.WRK_END_DTM) AS WRK_END_DTM
					, TO_CHAR(TO_CHAR(MAX(A.WRK_END_DTM),'YYYY-MM-DD HH24:MI:SS')::TIMESTAMP - TO_CHAR(MIN(A.WRK_STRT_DTM),'YYYY-MM-DD HH24:MI:SS')::TIMESTAMP, 'HH24시MI분SS초') AS WRK_DTM
					FROM T_WRKEXE_G A
					WHERE 1= 1
					AND EXE_SN=#{exe_sn}
					GROUP BY EXE_GRP_SN, SCD_NM, DB_ID, SCD_ID
				)A
	</select>
	
	<select id="selectScheduleHistoryWorkDetail" resultType="hashmap" parameterType="int" >
		SELECT 
		  (ROW_NUMBER() OVER()) AS ROWNUM
		, WRK_ID
		, SCD_ID
		, EXE_SN
		, TO_CHAR(A.WRK_STRT_DTM,'YYYY-MM-DD HH24:MI:SS') AS WRK_STRT_DTM
		, TO_CHAR(A.WRK_END_DTM,'YYYY-MM-DD HH24:MI:SS') AS WRK_END_DTM
		, TO_CHAR(TO_CHAR(A.WRK_END_DTM,'YYYY-MM-DD HH24:MI:SS')::TIMESTAMP - TO_CHAR(A.WRK_STRT_DTM,'YYYY-MM-DD HH24:MI:SS')::TIMESTAMP, 'HH24시MI분SS초') AS WRK_DTM
		, WRK_NM
		, (SELECT B.WRK_EXP FROM T_BCK_WRKCNG_I B WHERE A.WRK_NM = B.WRK_NM) AS WRK_EXP
		, EXE_RSLT_CD
		FROM T_WRKEXE_G A
		WHERE EXE_GRP_SN IN(
			SELECT EXE_GRP_SN FROM T_WRKEXE_G WHERE EXE_SN=#{exe_sn})
	</select>	
</mapper>
