<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="scheduleSql">

	<select id="selectWorkList" resultType="workVO">
		/**
	 	* Query ID : selectWorkList
	 	* Description :  스케쥴 work List 조회
	 	* Author : 변승우
	 	**/
       SELECT 
      		(ROW_NUMBER() OVER()) AS ROWNUM
			, (ROW_NUMBER() OVER()) AS IDX
      		, A.WRK_ID
			, B.DB_SVR_ID
            , (SELECT DB_SVR_NM FROM T_DBSVR_I WHERE B.DB_SVR_ID = DB_SVR_ID ) AS DB_SVR_NM
			, B.DB_ID
			, (CASE WHEN DB_ID>0 THEN (SELECT DB_NM FROM T_DB_I WHERE B.DB_ID=DB_ID AND USEYN = 'Y') ELSE '' END) AS DB_NM
			, A.BSN_DSCD
            , (SELECT SYS_CD_NM FROM T_SYSDTL_C WHERE A.BSN_DSCD = SYS_CD ) AS BSN_DSCD_NM 
            , B.BCK_BSN_DSCD
			, (SELECT SYS_CD_NM FROM T_SYSDTL_C WHERE B.BCK_BSN_DSCD = SYS_CD ) AS BCK_BSN_DSCD_NM
			, B.WRK_NM
			, B.WRK_EXP
			, B.BCK_OPT_CD
			, (SELECT SYS_CD_NM FROM T_SYSDTL_C WHERE B.BCK_OPT_CD = SYS_CD ) AS BCK_OPT_CD_NM
			, B.BCK_MTN_ECNT
			, B.CPS_YN
			, B.LOG_FILE_BCK_YN
			, B.LOG_FILE_STG_DCNT
			, B.LOG_FILE_MTN_ECNT
			, B.CPRT
			, B.SAVE_PTH
			, B.FILE_FMT_CD
			, B.FILE_STG_DCNT
			, B.ENCD_MTH_NM
			, B.USR_ROLE_NM
			, A.FRST_REGR_ID
			, TO_CHAR(A.FRST_REG_DTM,'YYYY-MM-DD HH24:MI:SS') AS FRST_REG_DTM
			, A.LST_MDFR_ID
			, TO_CHAR(A.LST_MDF_DTM,'YYYY-MM-DD HH24:MI:SS') AS LST_MDF_DTM
      FROM T_WRKCNG_I A, T_BCK_WRKCNG_I B 
      WHERE 1=1	
      AND A.WRK_ID = B.WRK_ID
      <if test="bsn_dscd != null and bsn_dscd != '' ">
      AND A.BSN_DSCD LIKE #{bsn_dscd}
      </if>
      <if test="db_svr_nm != null and db_svr_nm != '' ">
      AND DB_SVR_ID IN(SELECT 
						    			DB_SVR_ID 
						   	  FROM T_DBSVR_I 
						      WHERE DB_SVR_NM = #{db_svr_nm}) 
	  </if>
      <if test="wrk_nm != null and wrk_nm != '' ">
      	AND WRK_NM LIKE CONCAT('%',#{wrk_nm},'%')
      </if>
    </select>
  
  
  	<select id="selectScheduleWorkList" resultType="Map" parameterType="HashMap">
		/**
	 	* Query ID : selectScheduleWorkList
	 	* Description :  선택된 work List 조회
	 	* Author : 변승우
	 	**/
       SELECT 
      		(ROW_NUMBER() OVER()) AS ROWNUM
      		,(ROW_NUMBER() OVER()) AS IDX
      		, WRK_ID
			, DB_SVR_ID
            , (SELECT DB_SVR_NM FROM T_DBSVR_I WHERE A.DB_SVR_ID = DB_SVR_ID ) AS DB_SVR_NM
			, DB_ID
			, (CASE WHEN DB_ID>0 THEN (SELECT DB_NM FROM T_DB_I WHERE A.DB_ID=DB_ID AND USEYN = 'Y') ELSE '' END) AS DB_NM
			, BCK_BSN_DSCD
			, (SELECT SYS_CD_NM FROM T_SYSDTL_C WHERE A.BCK_BSN_DSCD = SYS_CD ) AS BCK_BSN_DSCD_NM
			, WRK_NM
			, WRK_EXP
			, 'N' AS NXT_EXE_YN
      FROM T_BCK_WRKCNG_I A
      WHERE 1=1	
      AND WRK_ID IN
      <foreach item="item" index="index" collection="work_id" open="(" separator="," close=")"> 
				 #{item}::numeric
	   </foreach>
    </select>
    
   
    <select id="selectScd_id" resultType="int">
   		/**
	 	* Query ID : selectScm_id
	 	* Description : 스케줄 ID 조회
	 	* Author : 변승우
	 	**/
    	SELECT NEXTVAL('q_scd_m_01')
    </select>
    
    
    <insert id="insertSchedule" parameterType="scheduleVO">
		/**
	 	* Query ID : insertSchedule
	 	* Description : 스케줄 insert
	 	* Author : 변승우
	 	**/
		INSERT INTO T_SCD_M
			(
			SCD_ID
			, SCD_NM
			, SCD_EXP
			, SCD_CNDT
			, EXE_PERD_CD
			, EXE_DT
			, EXE_MONTH
			, EXE_DAY
			, EXE_HMS
			, PREV_EXE_DTM
			, NXT_EXE_DTM
			, FRST_REGR_ID
			, FRST_REG_DTM
			, LST_MDFR_ID
			, LST_MDF_DTM
			)
		VALUES
			(			
			#{scd_id}
			, #{scd_nm}
			, #{scd_exp}
			, 'TC001801'
			, #{exe_perd_cd}
			, #{exe_dt}
			, #{exe_month}
			, #{exe_day}
			, #{exe_hms}
			, #{prev_exe_dtm}
			, #{nxt_exe_dtm}
			, #{frst_regr_id}
			, clock_timestamp()
			, #{frst_regr_id}
			, clock_timestamp()
			)
	</insert>
	
	
	<insert id="insertScheduleDtl" parameterType="scheduleDtlVO">
		/**
	 	* Query ID : insertScheduleDtl
	 	* Description : 스케줄 상세정보 insert
	 	* Author : 변승우
	 	**/
		INSERT INTO T_SCD_D
			(
			SCD_DTL_ID
			, SCD_ID
			, WRK_ID
			, EXE_ORD
			, NXT_EXE_YN
			, FRST_REGR_ID
			, FRST_REG_DTM
			, LST_MDFR_ID
			, LST_MDF_DTM
			)
		VALUES
			(			
			nextval('q_scd_d_01')
			, #{scd_id}
			, #{wrk_id}
			, #{exe_ord}
			, #{nxt_exe_yn}
			, #{frst_regr_id}
			, clock_timestamp()
			, #{frst_regr_id}
			, clock_timestamp()
			)
	</insert>
	
	
	<select id="selectScheduleList" resultType="hashMap">
		/**
	 	* Query ID : selectScheduleList
	 	* Description :  스케줄  List 조회
	 	* Author : 변승우
	 	**/
       SELECT 
      		(ROW_NUMBER() OVER()) AS ROWNUM
			, (ROW_NUMBER() OVER()) AS IDX
      		, A.SCD_ID
			, A.SCD_NM
			, A.SCD_CNDT
            , A.SCD_EXP
			, A.EXE_PERD_CD
			, A.EXE_DT
			, A.EXE_MONTH
			, A.EXE_DAY
			, A.EXE_HMS
			, (SELECT COUNT(*) FROM T_SCD_D WHERE SCD_ID = A.SCD_ID) AS WRK_CNT
			, TO_CHAR(A.PREV_EXE_DTM,'YYYY-MM-DD HH24:MI:SS') AS PREV_EXE_DTM
			, TO_CHAR(A.NXT_EXE_DTM,'YYYY-MM-DD HH24:MI:SS') AS NXT_EXE_DTM
			, A.FRST_REGR_ID
			, TO_CHAR(A.FRST_REG_DTM,'YYYY-MM-DD HH24:MI:SS') AS FRST_REG_DTM
			, A.LST_MDFR_ID
			, TO_CHAR(A.LST_MDF_DTM,'YYYY-MM-DD HH24:MI:SS') AS LST_MDF_DTM
      FROM T_SCD_M A
      WHERE 1=1	
      <if test="scd_nm != null and scd_nm != '' ">
      AND A.SCD_NM LIKE  '%' || #{scd_nm} || '%'
	  </if>
      <if test="scd_exp != null and scd_exp != '' ">
      	AND A.SCD_EXP LIKE CONCAT('%',#{scd_exp},'%')
      </if>
      <if test="scd_cndt != null and scd_cndt != '' ">
      	AND A.SCD_CNDT LIKE  '%' || #{scd_cndt} || '%'
      </if>
      <if test="frst_regr_id != null and frst_regr_id != '' ">
      	AND A.FRST_REGR_ID LIKE  '%' || #{frst_regr_id} || '%'
      </if>
      <if test="nxt_exe_from != null and nxt_exe_from != '' and nxt_exe_to != null and nxt_exe_to != '' ">
       AND TO_CHAR(A.NXT_EXE_DTM,'YYYY-MM-DD HH24:MI:SS') BETWEEN  #{nxt_exe_from} AND #{nxt_exe_to}
      </if>
    </select>	
    
    <select id="selectInitScheduleList" resultType="scheduleVO">
		/**
	 	* Query ID : selectInitScheduleList
	 	* Description :  스케줄  List 조회
	 	* Author : 변승우
	 	**/
       SELECT 
      		(ROW_NUMBER() OVER()) AS ROWNUM
			, (ROW_NUMBER() OVER()) AS IDX
      		, SCD_ID
			, SCD_NM
            , SCD_EXP
			, EXE_PERD_CD
			, EXE_DT
			, EXE_MONTH
			, EXE_DAY
			, EXE_HMS
			, TO_CHAR(PREV_EXE_DTM,'YYYY-MM-DD HH24:MI:SS') AS PREV_EXE_DTM
			, TO_CHAR(NXT_EXE_DTM,'YYYY-MM-DD HH24:MI:SS') AS NXT_EXE_DTM
			, FRST_REGR_ID
			, TO_CHAR(FRST_REG_DTM,'YYYY-MM-DD HH24:MI:SS') AS FRST_REG_DTM
			, LST_MDFR_ID
			, TO_CHAR(LST_MDF_DTM,'YYYY-MM-DD HH24:MI:SS') AS LST_MDF_DTM			
      FROM T_SCD_M
      WHERE 1=1	
      AND SCD_CNDT = 'TC001801'
    </select>	
    
    
 
    <select id="selectExeScheduleList" resultType="hashMap" parameterType="string">
   		/**
	 	* Query ID : selectExeScheduleList
	 	* Description : 실행할 스케줄 정보 조회
	 	* Author : 변승우
	 	**/
	 	SELECT 
				A.SCD_ID
		        , A.WRK_ID
		        , A.NXT_EXE_YN
		        , A.EXE_ORD
				, B.DB_SVR_ID
				, B.DB_ID
				, (CASE WHEN DB_ID>0 THEN (SELECT DB_NM FROM T_DB_I WHERE B.DB_ID=DB_ID AND USEYN = 'Y') ELSE '' END) AS DB_NM
				, B.BCK_BSN_DSCD
				, (SELECT SYS_CD_NM FROM T_SYSDTL_C WHERE B.BCK_BSN_DSCD = SYS_CD ) AS BCK_BSN_DSCD_NM
				, B.WRK_NM
				, B.WRK_EXP
				, B.BCK_OPT_CD
				, (SELECT SYS_CD_NM FROM T_SYSDTL_C WHERE B.BCK_OPT_CD = SYS_CD ) AS BCK_OPT_CD_NM
				, B.BCK_MTN_ECNT
				, B.CPS_YN
				, B.LOG_FILE_BCK_YN
				, B.LOG_FILE_STG_DCNT
				, B.LOG_FILE_MTN_ECNT
				, B.CPRT
				, B.SAVE_PTH
				, B.FILE_FMT_CD
				, (SELECT SYS_CD_NM FROM T_SYSDTL_C WHERE B.FILE_FMT_CD = SYS_CD ) AS FILE_FMT_CD_NM
				, B.FILE_STG_DCNT
				, B.ENCD_MTH_NM
				, (SELECT SYS_CD_NM FROM T_SYSDTL_C WHERE B.ENCD_MTH_NM = SYS_CD ) AS INCD
				, B.USR_ROLE_NM
				, B.DATA_PTH
				, B.BCK_PTH
				, B.ACV_FILE_STGDT
				, B.ACV_FILE_MTNCNT
				, B.BCK_FILENM
		FROM T_SCD_D A, T_BCK_WRKCNG_I B
		WHERE 1 = 1
		AND A.WRK_ID = B.WRK_ID
		AND A.SCD_ID = #{scd_id}::numeric
		ORDER BY A.EXE_ORD
	 	
	</select>
	
	
	<update id="updateNxtJobTime" parameterType="hashMap">
	   	/**
	 	* Query ID : updateNxtJobTime
	 	* Description : 다음 실행할 스케줄 시간 업데이트
	 	* Author : 변승우
	 	**/
	 	UPDATE T_SCD_M
	 	SET
		       NXT_EXE_DTM=#{nFireTime} 	
	 	WHERE SCD_ID=#{scd_id}::numeric	
	</update>
	
	<update id="updatePrevJobTime" parameterType="hashMap">
	   	/**
	 	* Query ID : updatePrevJobTime
	 	* Description : 다음 실행할 스케줄 시간 업데이트
	 	* Author : 변승우
	 	**/
	 	UPDATE T_SCD_M
	 	SET
		       PREV_EXE_DTM=#{nFireTime} 	
	 	WHERE SCD_ID=#{scd_id}::numeric	
	</update>
	
	
	<select id="selectDbconn" resultType="hashMap" parameterType="int">
   		/**
	 	* Query ID : selectDbconn
	 	* Description : Db서버 정보
	 	* Author : 변승우
	 	**/
	          SELECT 
                 DB_SVR_ID
                , DB_SVR_NM
                , IPADR
                , PORTNO
                , DFT_DB_NM
                , SVR_SPR_USR_ID
                , SVR_SPR_SCM_PWD
			, FRST_REGR_ID
			, TO_CHAR(FRST_REG_DTM,'YYYY-MM-DD HH24:MI:SS') AS FRST_REG_DTM
			, LST_MDFR_ID
			, TO_CHAR(LST_MDF_DTM,'YYYY-MM-DD HH24:MI:SS') AS LST_MDF_DTM
          FROM T_DBSVR_I	
          WHERE 1 = 1
	      AND DB_SVR_ID = #{db_svr_id}
	</select>
		
		
	<select id="selectAddOption" resultType="hashMap" parameterType="int">
   		/**
	 	* Query ID : selectAddOption
	 	* Description : 부가옵션조회
	 	* Author : 변승우
	 	**/
	     SELECT 
	    		 A.WRK_ID
	    		, A.BCK_WRK_ID
	            , B.GRP_CD
	            , (SELECT GRP_CD_NM FROM T_SYSGRP_C WHERE B.GRP_CD = GRP_CD ) AS GRP_CD_NM
	            , B.OPT_CD
	            , (SELECT SYS_CD_NM FROM T_SYSDTL_C WHERE B.OPT_CD = SYS_CD ) AS OPT_CD_NM
	            , B.BCK_OPT_VAL
		 FROM T_BCK_WRKCNG_I A, T_BCKOPT_I B
	     WHERE 1 = 1
	     AND A.BCK_WRK_ID = B.BCK_WRK_ID
	     AND A.WRK_ID = #{wrk_id}
	</select>


	<select id="selectAddObject" resultType="hashMap" parameterType="int">
	   		/**
		 	* Query ID : selectAddObject
		 	* Description : 오브젝트 옵션조회
		 	* Author : 변승우
		 	**/
		     SELECT 
					 	A.WRK_ID
			            , B.DB_ID
			            , (SELECT DB_NM FROM T_DB_I WHERE A.DB_ID = DB_ID  AND USEYN = 'Y') AS DB_NM
			            , B.SCM_NM
			            , B.OBJ_NM
			 FROM T_BCK_WRKCNG_I A, T_BCKOBJ_L B
		     WHERE 1 = 1
		     AND A.BCK_WRK_ID = B.BCK_WRK_ID
	</select>		
		
			
	<delete id="deleteDscheduleList" parameterType="int">
	   	/**
	 	* Query ID : deleteDscheduleList
	 	* Description : 스케줄 DETAIL 삭제
	 	* Author : 변승우
	 	**/
	 	DELETE
	 	FROM  T_SCD_D
	 	WHERE SCD_ID=#{scd_id}
	</delete>
	
	
	<delete id="deleteMscheduleList" parameterType="int">
	   	/**
	 	* Query ID : deleteMscheduleList
	 	* Description :  스케줄 MASTER 삭제
	 	* Author : 변승우
	 	**/
	 	DELETE
	 	FROM  T_SCD_M
	 	WHERE SCD_ID=#{scd_id}
	</delete>
	

    <select id="selectModifyScheduleList" resultType="hashMap" parameterType="int">
		/**
	 	* Query ID : selectModifyScheduleList
	 	* Description :  스케줄  List 조회
	 	* Author : 변승우
	 	**/
	 	SELECT 
      		(ROW_NUMBER() OVER()) AS ROWNUM
			, (ROW_NUMBER() OVER()) AS IDX
      		, A.SCD_ID
			, A.SCD_NM
            , A.SCD_EXP
			, A.EXE_PERD_CD
			, A.EXE_MONTH
			, A.EXE_DAY
			, A.EXE_DT
			, A.EXE_HMS      
			, TO_CHAR(A.PREV_EXE_DTM,'YYYY-MM-DD HH24:MI:SS') AS PREV_EXE_DTM
			, TO_CHAR(A.NXT_EXE_DTM,'YYYY-MM-DD HH24:MI:SS') AS NXT_EXE_DTM
            , B.WRK_ID
      FROM T_SCD_M A, T_SCD_D B
      WHERE 1=1	
      AND A.SCD_ID = B.SCD_ID
      AND A.SCD_ID = #{scd_id}
      ORDER BY EXE_ORD
	 </select>	
	 
	 
	 
	 <update id="updateSchedule" parameterType="scheduleVO">
	   	/**
	 	* Query ID : updateSchedule
	 	* Description : 스케줄마스터 수정
	 	* Author : 변승우
	 	**/
	 	UPDATE T_SCD_M
	 	SET
			SCD_NM = #{scd_nm} 	
			, SCD_EXP = #{scd_exp} 	
			, EXE_PERD_CD = #{exe_perd_cd} 	
			, EXE_DT = #{exe_dt}
			, EXE_MONTH = #{exe_month}
			, EXE_DAY = #{exe_day}
			, EXE_HMS = #{exe_hms} 	
			, PREV_EXE_DTM = #{prev_exe_dtm} 	 
			, NXT_EXE_DTM = #{nxt_exe_dtm} 	
			, LST_MDFR_ID = #{frst_regr_id}
			, LST_MDF_DTM = clock_timestamp()
	 	WHERE SCD_ID=#{scd_id}::numeric	
	</update>
	
	
	
	<update id="deleteScheduleDtl" parameterType="scheduleDtlVO">
	   	/**
	 	* Query ID : deleteScheduleDtl
	 	* Description : 스케줄 디테일(work) 삭제
	 	* Author : 변승우
	 	**/
	 	DELETE FROM T_SCD_D
	 	WHERE SCD_ID=#{scd_id}::numeric	
	</update>	
	
	
	<update id="updateScheduleStatus" parameterType="scheduleVO">
	   	/**
	 	* Query ID : updateScheduleStatus
	 	* Description : 다음 실행할 스케줄 시간 업데이트
	 	* Author : 변승우
	 	**/
	 	UPDATE T_SCD_M
	 	SET
		       SCD_CNDT=#{scd_cndt} 	
	 	WHERE SCD_ID=#{scd_id}
	</update>
	
	
	<select id="scd_nmCheck" resultType="int">
		/**
		* Query ID : scd_nmCheck
		* Description : 스케줄명 중복 체크
		* Author : 변승우
		**/
		SELECT 
				 COUNT(*)
		FROM T_SCD_M
		WHERE SCD_NM = #{scd_nm}
	</select>	
	
	
		<select id="selectWrkScheduleList" resultType="Map" parameterType="HashMap">
		/**
	 	* Query ID : selectWrkScheduleList
	 	* Description :  work List 조회
	 	* Author : 변승우
	 	**/
	 	SELECT 
      		(ROW_NUMBER() OVER()) AS ROWNUM
      		,(ROW_NUMBER() OVER()) AS IDX
      		, A.WRK_ID
			, A.DB_SVR_ID
            , B.SCD_ID
            , (SELECT DB_SVR_NM FROM T_DBSVR_I WHERE A.DB_SVR_ID = DB_SVR_ID ) AS DB_SVR_NM
			, A.DB_ID
			, (CASE WHEN DB_ID>0 THEN (SELECT DB_NM FROM T_DB_I WHERE A.DB_ID=DB_ID AND USEYN = 'Y') ELSE '' END) AS DB_NM
			, A.BCK_BSN_DSCD
			, (SELECT SYS_CD_NM FROM T_SYSDTL_C WHERE A.BCK_BSN_DSCD = SYS_CD ) AS BCK_BSN_DSCD_NM
			, A.WRK_NM
			, A.WRK_EXP
			, 'N' AS NXT_EXE_YN
      FROM T_BCK_WRKCNG_I A, T_SCD_D B
      WHERE 1=1
      AND A.WRK_ID = B.WRK_ID
      AND B.SCD_ID = #{scd_id}
	 	</select>
	 	
	 	
	 	
	 <select id="selectWorkDivList" resultType="Map" parameterType="HashMap">
		/**
	 	* Query ID : selectWorkDivList
	 	* Description :  work List 조회
	 	* Author : 변승우
	 	**/
		SELECT 
	    	BSN_DSCD
	        , (SELECT SYS_CD_NM FROM T_SYSDTL_C WHERE BSN_DSCD = SYS_CD ) AS BSN_DSCD_NM
	    FROM T_WRKCNG_I
	    GROUP BY BSN_DSCD
	 </select>
</mapper>
