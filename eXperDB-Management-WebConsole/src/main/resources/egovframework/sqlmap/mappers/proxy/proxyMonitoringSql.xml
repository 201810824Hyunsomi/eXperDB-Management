<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="proxyMonitoringSql">

	<select id="selectProxyServerList" resultType="hashMap">
		/**
		* Query ID : selectProxyServerList
		* Description : proxy server list
		* Author : 윤정
		**/
		SELECT 
       		(ROW_NUMBER() OVER()) AS ROWNUM, 
       		(ROW_NUMBER() OVER()) AS IDX,
       		s.PRY_SVR_ID,
       		s.IPADR,
       		s.AGT_SN,
       		s.PRY_SVR_NM,
       		s.PRY_PTH,
       		s.KAL_PTH,
       		s.USE_YN,
       		s.EXE_STATUS,
       		s.MASTER_GBN,
       		s.MASTER_SVR_ID,
       		s.DB_SVR_ID,
       		s.DAY_DATA_DEL_TERM,
       		s.MIN_DATA_DEL_TERM,
       		s.FRST_REGR_ID,
       		s.FRST_REG_DTM,
       		s.LST_MDFR_ID,
       		s.LST_MDF_DTM,
       		a.AGT_CNDT_CD 
		FROM T_PRY_SVR_I s join T_PRY_AGT_I a on s.AGT_SN = a.AGT_SN
		<if test="value != null and value != '' ">
        WHERE PRY_SVR_ID = #{value} 
        OR MASTER_SVR_ID = #{value}
        </if>
		ORDER BY PRY_SVR_ID, LST_MDF_DTM

	</select>
	
	<select id="selectProxyServerByMasterId" resultType="hashMap">
		/**
		* Query ID : selectProxyServerByMasterId
		* Description : proxy server cluster 1set 
		* Author : 윤정
		**/
			SELECT 
       		(ROW_NUMBER() OVER()) AS ROWNUM, 
       		(ROW_NUMBER() OVER()) AS IDX,
       		s.PRY_SVR_ID,
       		s.IPADR,
       		s.AGT_SN,
       		s.PRY_SVR_NM,
       		s.PRY_PTH,
       		s.KAL_PTH,
       		s.USE_YN,
       		s.EXE_STATUS,
       		s.MASTER_GBN,
       		s.MASTER_SVR_ID,
       		s.DB_SVR_ID,
       		s.DAY_DATA_DEL_TERM,
       		s.MIN_DATA_DEL_TERM,
       		s.FRST_REGR_ID,
       		s.FRST_REG_DTM,
       		s.LST_MDFR_ID,
       		s.LST_MDF_DTM,
       		a.AGT_CNDT_CD,
       		v.V_IP 
		FROM T_PRY_SVR_I s 
		JOIN T_PRY_AGT_I a ON s.AGT_SN = a.AGT_SN 
		JOIN T_PRY_VIPCNG_I v ON s.PRY_SVR_ID = v.PRY_SVR_ID
		<if test="value != null and value != '' ">
        WHERE (s.PRY_SVR_ID = #{value} 
        OR s.MASTER_SVR_ID = #{value})
        </if>
        AND v.STATE_NM = 'MASTER'
		ORDER BY s.PRY_SVR_ID, LST_MDF_DTM

	</select>
	
	<select id="selectDBServerConProxy" resultType="hashMap">
		/**
		* Query ID : selectDBServerConProxy
		* Description : db server connected proxy
		* Author : 윤정
		**/
		SELECT        		
       		(ROW_NUMBER() OVER()) AS ROWNUM, 
       		(ROW_NUMBER() OVER()) AS IDX,
			tpsi.PRY_SVR_ID , 
			tdi.MASTER_GBN , 
			tdi.DB_SVR_ID,
			tdi.IPADR , 
			tdi.PORTNO , 
			tdi.SVR_HOST_NM , 
			tai.AGT_CNDT_CD 
		FROM T_PRY_SVR_I tpsi 
		JOIN T_DBSVRIPADR_I tdi  ON tpsi.DB_SVR_ID = tdi.DB_SVR_ID
		JOIN T_AGTCNDT_I tai ON tdi.IPADR = tai.IPADR
		WHERE tpsi.PRY_SVR_ID = #{value}
		ORDER BY tdi.MASTER_GBN, tdi.DB_SVR_ID
	</select>
	
	<select id="selectProxyLogList" resultType="hashMap">
		/**
		* Query ID : selectProxyLogList
		* Description : proxy starting state list
		* Author : 윤정
		**/
		SELECT
			tpsi.PRY_SVR_ID, 
			tpsi.PRY_SVR_NM , 
			tpacg.SYS_TYPE, 
			tpacg.ACT_TYPE, 
			tpacg.WRK_DTM 
		FROM T_PRY_SVR_I tpsi 
		JOIN T_PRY_ACTSTATE_CNG_G tpacg on tpsi.PRY_SVR_ID = tpacg.PRY_SVR_ID 
		WHERE tpsi.PRY_SVR_ID = #{value}
		ORDER BY tpacg.WRK_DTM DESC
	</select>
	
	<select id="selectConfiguration" resultType="hashMap" parameterType="hashMap">
		/**
		* Query ID : selectConfiguration
		* Description : proxy, keepalived config file
		* Author : 윤정
		**/
		SELECT 
			(ROW_NUMBER() OVER()) AS ROWNUM, 
			(ROW_NUMBER() OVER()) AS IDX,
			tpsi.PRY_SVR_ID,
			tpsi.IPADR,
		<if test='type == "P"'>
			tpsi.PRY_PTH AS PATH,
        </if>
        <if test='type == "K"'>
			tpsi.KAL_PTH AS PATH,
        </if>
        	tpsi.PRY_SVR_NM,
        	tpai.SOCKET_PORT
		FROM T_PRY_SVR_I tpsi
		JOIN T_PRY_AGT_I tpai ON tpsi.AGT_SN = tpai.AGT_SN
		WHERE tpsi.PRY_SVR_ID = #{pry_svr_id}::numeric
	</select>
	
	<select id="selectProxyStatisticsInfo" parameterType="int" resultType="proxyStatisticVO">
		/**
		* Query ID : selectProxyStatisticsInfo
		* Description : proxy listener statistics information
		* Author : 윤정
		**/
		<![CDATA[
			SELECT *
			FROM (
				SELECT
					ROW_NUMBER() OVER (PARTITION BY tpssg.DB_CON_ADDR ORDER BY exe_dtm) AS r, 
					(ROW_NUMBER() OVER()) AS ROWNUM, 
					(ROW_NUMBER() OVER()) AS IDX
					tpsi.PRY_SVR_ID, 
					tpssg.EXE_DTM, 
					tpsi.PRY_SVR_NM, 
					tpli.LSN_NM, 
					tpssg.DB_CON_ADDR, 
					tpssg.SVR_STATUS, 
					tpssg.LST_STATUS_CHK_DESC, 
					tpssg.FAIL_CHK_CNT, 
					tpssg.MAX_SESSION, 
					tpssg.SESSION_LIMIT, 
					tpssg.CUMT_SSO_CON_CNT, 
					tpssg.BYTE_RECEIVE, 
					tpssg.BYTE_TRANSMIT
				FROM T_PRY_SVR_I tpsi 
				JOIN T_PRY_LSN_I tpli ON tpsi.PRY_SVR_ID = tpli.PRY_SVR_ID 
				JOIN T_PRY_SVR_STATUS_G tpssg ON tpli.LSN_ID = tpssg.LSN_ID
				WHERE tpsi.PRY_SVR_ID = 1
				ORDER BY tpssg.EXE_DTM DESC
			) x
			WHERE x.r <= 2
		]]>
	</select>
</mapper>